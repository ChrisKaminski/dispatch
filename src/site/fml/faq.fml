<faqs title="Frequently Asked Questions">

  <part>
    <title>Dependencies</title>
   
    <faq id="size">
      <question>
        The Databinder library seems pretty small. Where’s the beef?
      </question>
      <answer>
        <p>It’s no secret: the beef is in <a href="http://wicket.sourceforge.net/">Wicket</a> and <a href="http://www.hibernate.org/">Hibernate</a>. Databinder is a little bit of code to make them work together nicely, and some documentation and tutorials to get you started, all wrapped up in a Maven project.</p>
      </answer>
    </faq>
    <faq id="write-own">
      <question>
        Okay, so couldn’t I write this myself then?
      </question>
      <answer>
        <p>Yes. But first you would need to learn how Wicket works (and Hibernate too if you’ve been living <i>in a cave</i>).</p>
        <p>If you’re not yet sure that Wicket is the one true Web framework, you may want to see some results before you spend a week figuring it out. That’s where Databinder comes in.</p>
      </answer>
    </faq>
    <faq id="tied">
      <question>
        Will my application be permanently tied to this library?
      </question>
      <answer>
        <p>Not at all. Using Databinder to jump-start your program doesn’t prevent you from later writing your own integration to Hibernate or some other database framework.</p>
      </answer>
    </faq>
    <faq id="maven">
      <question>
        Why does this project insist on the use of Maven?
      </question>
      <answer>
        <p>It doesn’t. You’re free to link to the Databinder JAR in any way you see fit. However, the server bandwidth required to distribute “quickstart” projects containing all dependencies is unavailable; using Maven or some other dependency management and distribution system is the only option for this convenience.</p>
	<p>After working through the examples, you may find that you like Maven enough to use in your own projects. If not, you can always raid the JARs in <tt>~/.m2/repo</tt>.</p>
      </answer>
    </faq>
    <faq id="uptodate">
      <question>
	Where can I get prerelease versions of Databinder?
      </question>
      <answer>
		<p>Snapshot releases of Databinder are available through a special Maven repository. If you would like to use a prerelease version of Databinder in your own project, be sure the following appears in your <tt>pom.xml</tt>:</p>
		<pre><![CDATA[
  &lt;repositories&gt;
    &lt;repository&gt;
      &lt;id&gt; databinder-snapshots&lt;/id&gt;
      &lt;name&gt;Databinder snapshot repository&lt;/name&gt;
      &lt;url&gt;http://databinder.net/snapshot&lt;/url&gt;
    &lt;/repository&gt;
  &lt;/repositories&gt;  ]]></pre>
		<p>Significant new features appearing in the snapshots are noted <a href="http://technically.us/n8/">this Databinder weblog</a> or <a href="/forum">the forum</a>. (<tt>mvn -U compile</tt> forces an update, if you think you’re missing out on something.) </p>
      </answer>
    </faq>
  </part>
  

  <part>
    <title>Suitability</title>

    <faq id="migrate">
      <question>
        Can I migrate my existing Web application?
      </question>
      <answer>
        <p>This library is optimized for getting new projects off the ground quickly. Adapting an existing one won’t be as easy as following the tutorials here, but you should still find Databinder helpful.</p>
      </answer>
    </faq>

    <faq id="demo">
      <question>
        Helpful? How so?
      </question>
      <answer>
        <p>Before you decide to migrate a large application to Wicket, you should probably write a proof-of-concept demo. If you program for a living, your demo will probably need to connect to a database.</p>
        <p>Use Databinder to code something that talks to one of your test databases, then fire it up for your boss and be a rock star for five minutes.</p>
        <p>Later, for the hard work of actually migrating your application, feel free to borrow ideas from Databinder’s source if the library as-packaged isn’t a perfect fit.</p>
      </answer>
    </faq>

    <faq id="spring">
      <question>
        What about my Spring application?
      </question>
      <answer>
        <p>It’s unlikely that any application would use both Spring and Databinder. You would surely want to make use of Spring’s <a href="http://www.springframework.org/docs/api/org/springframework/orm/hibernate/support/OpenSessionInViewFilter.html">request filter</a> to manage the database session, for one thing.</p>
        <p>Beyond that, you’ll find Databinder’s “You want data? You got it!” attitude fairly incompatible with traditionally partitioned database code. If you want some outside the box thinking about the best practices for injecting Wicket into enterprise-class IoC Spring-managed applications, you’ll have to look <a href="http://www.wicket-wiki.org.uk/wiki/index.php/Spring">elsewhere</a>. <strong>Good luck!</strong> </p>
      </answer>
    </faq>

    <faq id="production">
      <question>
        Enough about migration. What about a brand-new Web app, is Databinder safe to run in production?
      </question>
      <answer>
        <p>That’s for you to decide. Databinder’s source is <a href="/releases.html">available</a> and, as <a href="#size">mentioned</a>, brief. Read it. Check if any <a href="dependencies.html"> dependencies</a> are pre-release. Test your application under load. Until someone else rolls out a high volume Web site with Databinder (or Wicket, for that matter) you’re a pioneer.</p>
      </answer>
    </faq>
  </part>
  
  <part>
    <title>Helpers</title>

    <faq id="non-database">
      <question>
        DateLabel, ScriptLink, WebLink… what’s with all these non-database classes?
      </question>
      <answer>
	<p> Wicket is lean, and of course that’s good, but a lot of new users are surely confused the first time they need to render a standard date like “April 1, 2006” and there’s nothing to go on but a half-finished wiki-page. With Databinder they can just use a DateLabel and get on with their programming.</p>
      </answer>
    </faq>

    <faq id="helper">
      <question>
        Yes, but random helper classes? This is supposed to be “a simple bridge from…”
      </question>
      <answer>
        <p>The tagline describes what Databinder is, not everything it does.</p>
	<p> Besides, the helpers are <i>not</i> random. They were all inspired by the database-driven example applications and would be handy in almost any project. They all have something to do with the practical need to retrieve, format, and display database information in a Web browser.</p>
      </answer>
    </faq>

    <faq id="help">
      <question>
        Speaking of “help,” I need some. Help me!
      </question>
      <answer>
        <p>Please ask your question in the <a href="forum/">forum</a>.</p>
      </answer>
    </faq>

  </part>

  <part>
    <title>Meta</title>

    <faq id="related">
      <question>
        Is this project related to Wicket?
      </question>
      <answer>
        <p>Databinder is not made, supported, or endorsed by the Wicket project, which is <a href="http://wicket.sourceforge.net/Vision.html">solely concerned</a> with “enabling component-oriented, programmatic manipulation of markup.”</p>
        <p>Databinder is solely concerned with hooking Wicket up to a database so you can use a next-generation framework without going on sabbatical.</p>
      </answer>
    </faq>

    <faq id="who">
      <question>
        Then who makes this thing?
      </question>
      <answer>
        <p>A New York programer who uses Wicket at his day job, loves it, and hopes that a dose of database practicality is all it needs to take over the world.</p>
        <p> Write me an <a href="mailto:nathan@technically.us">e-mail</a> for your off-the-record suggestions, rants, or raves. Read my <a href="http://technically.us/n8">technical weblog</a> for my on-the-record suggestions, rants, and raves.</p>
        <p>— Nathan Hamblen</p>
      </answer>
    </faq>
<!--
    <faq id="">
      <question>
        
      </question>
      <answer>
        <p>  </p>
      </answer>
    </faq>
-->

  </part>
</faqs>
